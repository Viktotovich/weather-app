{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://webpack-dev-template/webpack/bootstrap","webpack://webpack-dev-template/webpack/runtime/global","webpack://webpack-dev-template/webpack/runtime/publicPath","webpack://webpack-dev-template/./src/components/api-key.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/en-US.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://webpack-dev-template/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://webpack-dev-template/./node_modules/date-fns/_lib/defaultOptions.js","webpack://webpack-dev-template/./node_modules/date-fns/constants.js","webpack://webpack-dev-template/./node_modules/date-fns/constructFrom.js","webpack://webpack-dev-template/./node_modules/date-fns/toDate.js","webpack://webpack-dev-template/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://webpack-dev-template/./node_modules/date-fns/startOfDay.js","webpack://webpack-dev-template/./node_modules/date-fns/getDayOfYear.js","webpack://webpack-dev-template/./node_modules/date-fns/differenceInCalendarDays.js","webpack://webpack-dev-template/./node_modules/date-fns/_lib/normalizeDates.js","webpack://webpack-dev-template/./node_modules/date-fns/startOfYear.js","webpack://webpack-dev-template/./node_modules/date-fns/startOfWeek.js","webpack://webpack-dev-template/./node_modules/date-fns/startOfISOWeek.js","webpack://webpack-dev-template/./node_modules/date-fns/getISOWeekYear.js","webpack://webpack-dev-template/./node_modules/date-fns/getISOWeek.js","webpack://webpack-dev-template/./node_modules/date-fns/startOfISOWeekYear.js","webpack://webpack-dev-template/./node_modules/date-fns/getWeekYear.js","webpack://webpack-dev-template/./node_modules/date-fns/getWeek.js","webpack://webpack-dev-template/./node_modules/date-fns/startOfWeekYear.js","webpack://webpack-dev-template/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://webpack-dev-template/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://webpack-dev-template/./node_modules/date-fns/_lib/format/formatters.js","webpack://webpack-dev-template/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://webpack-dev-template/./node_modules/date-fns/_lib/protectedTokens.js","webpack://webpack-dev-template/./node_modules/date-fns/isValid.js","webpack://webpack-dev-template/./node_modules/date-fns/isDate.js","webpack://webpack-dev-template/./node_modules/date-fns/format.js","webpack://webpack-dev-template/./src/components/date-handler.js","webpack://webpack-dev-template/./src/components/requests-manager.js","webpack://webpack-dev-template/./src/components/icon-manager.js","webpack://webpack-dev-template/./src/components/dom-manager.js","webpack://webpack-dev-template/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","let apiKey = \"GYGAYCHNZBU2BMB3P34VE5H8W\";\n\nexport default apiKey;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","//Pretend nothing else in this world exists, this DOES NOT HAVE TO KNOW ABOUT OUTSIDE FUNCTIONS. All this should do is process and return dates like a factory\n\nimport { format } from \"date-fns\";\n\nconst dateController = {\n  processDate: function (date) {\n    const processedDate = format(new Date(date), \"dd-MMMM\");\n    return processedDate;\n  },\n  processHour: function (hour) {\n    const today = this.getToday();\n    console.log(hour);\n\n    const [hours, minutes] = hour.split(\":\");\n    today.setHours(hours, minutes);\n\n    const processedHour = format(today, \"h a\");\n    return processedHour;\n  },\n  getToday: function () {\n    const today = new Date();\n    return today;\n  },\n};\n\nexport { dateController };\n","import apiKey from \"./api-key\";\nimport { dateController } from \"./date-handler\";\n\nclass WeatherDay {\n  constructor(json, dayIndex) {\n    this.conditions = json.conditions;\n    this.dateTime = dateController.processDate(json.datetime);\n\n    this.feelsLikeMaxTempF = `${json.feelslikemax}°F`;\n    this.feelsLikeMaxTempC = `${this.convertFtoC(json.feelslikemax)}°C`;\n\n    this.feelsLikeMinTempF = `${json.feelslikemin}°F`;\n    this.feelsLikeMinTempC = `${this.convertFtoC(json.feelslikemin)}°C`;\n\n    this.humidity = json.humidity;\n\n    this.precip = this.getPrecip(json);\n    this.snow = json.snow;\n\n    this.dayTempF = `${json.temp}°F`;\n    this.dayTempC = `${this.convertFtoC(json.temp)}°C`;\n\n    this.dayTempMaxF = `${json.tempmax}°F`;\n    this.dayTempMaxC = `${this.convertFtoC(json.tempmax)}°C`;\n\n    this.dayTempMinF = `${json.tempmin}°F`;\n    this.dayTempMinC = `${this.convertFtoC(json.tempmin)}°C`;\n\n    this.sunrise = json.sunrise;\n    this.sunset = json.sunset;\n\n    this.weatherHours = json.hours;\n    this.dayIndex = dayIndex;\n    this.icon = json.icon;\n    this.type = \"General\";\n  }\n\n  getHumidityLevel() {\n    if (this.humidity < 50) {\n      return \"low\";\n    } else if (this.humidity >= 50 && this.humidity <= 70) {\n      return \"medium\";\n    } else {\n      return \"high\";\n    }\n  }\n\n  convertFtoC(tempInF) {\n    const tempInC = (tempInF - 32) * (5 / 9);\n    return parseFloat(tempInC).toFixed(1);\n  }\n\n  getHours() {\n    return this.weatherHours;\n  }\n\n  getPrecip(json) {\n    if (json.precip === null) {\n      return 0;\n    } else {\n      return json.precip;\n    }\n  }\n\n  getUserPreferredTemp(data, userTemp) {\n    //i.e: dayTempMin+C\n    return this[`${data}${userTemp}`];\n  }\n}\n\nclass CurrentWeather {\n  constructor(json, address, description) {\n    this.conditions = json.conditions;\n    this.dateTimePeriod = dateController.processHour(json.datetime);\n\n    this.feelsLikeF = `${json.feelslike}°F`;\n    this.feelsLikeC = `${this.convertFtoC(json.feelslike)}°C`;\n\n    this.humidity = json.humidity;\n    this.pricip = this.getPrecip(json);\n    this.snow = json.snow;\n\n    this.sunrise = json.sunrise;\n    this.sunset = json.sunset;\n\n    this.tempF = `${json.temp}°F`;\n    this.tempC = `${this.convertFtoC(json.temp)}°C`;\n\n    this.icon = json.icon;\n\n    this.address = this.capitalizeFirstLetter(address);\n    this.description = description;\n    this.type = \"Current\";\n  }\n\n  //for the icons\n  getHumidityLevel() {\n    if (this.humidity < 50) {\n      return \"low\";\n    } else if (this.humidity >= 50 && this.humidity <= 70) {\n      return \"medium\";\n    } else {\n      return \"high\";\n    }\n  }\n\n  convertFtoC(tempInF) {\n    const tempInC = (tempInF - 32) * (5 / 9);\n    return parseFloat(tempInC).toFixed(1);\n  }\n\n  getPrecip(json) {\n    if (json.precip === null) {\n      return 0;\n    } else {\n      return json.precip;\n    }\n  }\n\n  capitalizeFirstLetter(address) {\n    const processedStr = address.toString();\n    return processedStr.charAt(0).toUpperCase() + processedStr.slice(1);\n  }\n\n  getUserPreferredTemp(data, userTemp) {\n    //i.e: dayTempMin+C\n    return this[`${data}${userTemp}`];\n  }\n}\n\nclass HourPeriod {\n  constructor(hour) {\n    this.hoursObj = hour;\n    this.exactHour = dateController.processHour(this.hoursObj.datetime);\n    this.icon = hour.icon;\n    this.tempF = `${hour.temp}°F`;\n    this.tempC = `${this.convertFtoC(hour.temp)}°C`;\n    this.precip = hour.precip;\n    this.conditions = hour.conditions;\n    this.humidity = hour.humidity;\n  }\n\n  getHumidityLevel() {\n    if (this.humidity < 50) {\n      return \"low\";\n    } else if (this.humidity >= 50 && this.humidity <= 70) {\n      return \"medium\";\n    } else {\n      return \"high\";\n    }\n  }\n\n  convertFtoC(tempInF) {\n    const tempInC = (tempInF - 32) * (5 / 9);\n    return parseFloat(tempInC).toFixed(1);\n  }\n\n  getPrecip(json) {\n    if (json.precip === null) {\n      return 0;\n    } else {\n      return json.precip;\n    }\n  }\n\n  getUserPreferredTemp(data, userTemp) {\n    return this[`${data}${userTemp}`];\n  }\n}\n\nconst requestsController = {\n  requestLink:\n    \"https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/\",\n  key: apiKey,\n  createRequest: async function (location) {\n    try {\n      dataProcessor.resetWeatherData();\n\n      const data = await fetch(\n        `${this.requestLink}${location}/?key=${this.key}`\n      );\n\n      if (data.status >= 200 && data.status < 300) {\n        const json = await data.json();\n\n        //maybe return this - so it can be picked-up at receiveReply on DOM?\n        const currentPeriod = await dataProcessor.processCurrent(json);\n        const weatherPeriod = await dataProcessor.processDataPeriod(json);\n        const hourPeriod = await dataProcessor.processHourPeriod(json);\n\n        console.log(hourPeriod);\n\n        return { currentPeriod, weatherPeriod, hourPeriod };\n      } else {\n        throw new Error(\n          `The request was rejected! HTTP Status: ${data.status}`\n        );\n      }\n    } catch (err) {\n      console.error(`${err.name}: ${err} at ${err.stack}`);\n    }\n  },\n};\n\nconst dataProcessor = {\n  //aka - weatherDay\n  weatherPeriod: [],\n  currentPeriod: [],\n  weatherHours: [],\n  dayIndex: 0,\n  processCurrent: function (json) {\n    const currentConditionsObj = new CurrentWeather(\n      json.currentConditions,\n      json.address,\n      json.description\n    );\n\n    this.currentPeriod.push(currentConditionsObj);\n    return this.currentPeriod;\n  },\n  processDataPeriod: function (json) {\n    this.dayIndex *= 0;\n    json.days.forEach((day) => {\n      let dayObj = new WeatherDay(day, this.dayIndex);\n      this.dayIndex += 1;\n\n      this.weatherPeriod.push(dayObj);\n    });\n    return this.weatherPeriod;\n  },\n  processHourPeriod: function (json) {\n    this.hourIndex *= 0;\n    json.days[0].hours.forEach((hour) => {\n      console.log(hour);\n      let hourPeriodObj = new HourPeriod(hour);\n      this.weatherHours.push(hourPeriodObj);\n    });\n    return this.weatherHours;\n  },\n  resetWeatherData: function () {\n    dataProcessor.weatherPeriod = [];\n    dataProcessor.currentPeriod = [];\n    dataProcessor.weatherHours = [];\n  },\n};\n\nexport { requestsController, dataProcessor };\n","/* eslint-disable */\n//I am aware that the API has it's own icons, I just want to do something different\n\nimport snowIcon from \"./icons/snow.png\";\nimport rainIcon from \"./icons/rain.png\";\nimport fogIcon from \"./icons/fog.png\";\nimport windIcon from \"./icons/wind.png\";\nimport cloudyIcon from \"./icons/cloudy.png\";\nimport partlyCloudyDay from \"./icons/partly-cloudy-day.png\";\nimport partlyCloudyNight from \"./icons/partly-cloudy-night.png\";\nimport clearDayIcon from \"./icons/clear-day.png\";\nimport clearNightIcon from \"./icons/clear-night.png\";\nimport thunderRainIcon from \"./icons/thunder-rain.png\";\nimport showersNightIcon from \"./icons/showers-night.png\";\nimport hazyDayIcon from \"./icons/hazy-day.png\";\nimport showersDayIcon from \"./icons/showers-day.png\";\nimport sleetIcon from \"./icons/sleet.png\";\nimport blizzardIcon from \"./icons/blizzard.png\";\nimport hailIcon from \"./icons/hail.png\";\nimport dustStormDayIcon from \"./icons/dust-storm-day.png\";\nimport tornadoAlertIcon from \"./icons/tornado-alert.png\";\nimport earthquakeAlertIcon from \"./icons/earthquake-alert.png\";\n\nimport highHumidityIcon from \"./icons/high-humidity.png\";\nimport mediumHumidityIcon from \"./icons/medium-humidity.png\";\nimport lowHumidityIcon from \"./icons/low-humidity.png\";\nimport sunriseIcon from \"./icons/sunrise.png\";\nimport sunsetIcon from \"./icons/sunset.png\";\n\nclass WeatherIcon {\n  constructor(media) {\n    this.media = media;\n  }\n\n  getIcon() {\n    const processedIcon = new Image();\n    processedIcon.src = this.media;\n    return processedIcon;\n  }\n\n  getIconUrl() {\n    return this.media;\n  }\n}\n\nconst weatherIcons = {};\n\nfunction setIconClass() {\n  const iconMap = {\n    //condition based icons\n    snow: snowIcon,\n    rain: rainIcon,\n    fog: fogIcon,\n    wind: windIcon,\n    cloudy: cloudyIcon,\n    \"partly-cloudy-day\": partlyCloudyDay,\n    \"partly-cloudy-night\": partlyCloudyNight,\n    \"clear-day\": clearDayIcon,\n    \"clear-night\": clearNightIcon,\n    \"thunder-rain\": thunderRainIcon,\n    \"showers-night\": showersNightIcon,\n    \"showers-day\": showersDayIcon,\n\n    //More info based icons\n    highHumidity: highHumidityIcon,\n    mediumHumidity: mediumHumidityIcon,\n    lowHumidity: lowHumidityIcon,\n    sunrise: sunriseIcon,\n    sunset: sunsetIcon,\n\n    //obsolete-icons :(\n    hazyDay: hazyDayIcon,\n    sleet: sleetIcon,\n    blizzard: blizzardIcon,\n    hail: hailIcon,\n    dustStormDay: dustStormDayIcon,\n    tornadoAlert: tornadoAlertIcon,\n    earthquakeAlert: earthquakeAlertIcon,\n  };\n\n  for (const [key, icon] of Object.entries(iconMap)) {\n    weatherIcons[key] = new WeatherIcon(icon);\n  }\n}\n\nconst iconFinder = {\n  processCondition: function (iconName) {\n    return weatherIcons[iconName].getIcon();\n  },\n  processHumidity: function (data) {\n    const humidityLevel = data.getHumidityLevel();\n    const icon = this.processCondition(`${humidityLevel}Humidity`);\n    return icon;\n  },\n  processBackgroundIcon: function (iconName) {\n    return weatherIcons[iconName].getIconUrl();\n  },\n};\n\nexport { setIconClass, iconFinder };\n","/* eslint-disable */\nimport { requestsController } from \"./requests-manager\";\nimport capitals from \"./json/capitals.json\";\nimport { iconFinder } from \"./icon-manager\";\n\n//To avoid Dom troubles, it's best to save the data here itself\nlet preferredTemparature = \"C\";\nlet savedCurrentData = [];\nlet savedPeriodData = [];\nlet savedHourlyData = [];\nlet credits =\n  \"Special thanks to Virtual Crossing, and their API for allowing the project to exist! All images are created with Canva Pro.\";\n\nconst domController = {\n  initiateDom: function () {\n    const suggestionContainer = document.querySelector(\"#search-suggestions\");\n    const submitSearch = document.querySelector(\"#submit-search\");\n    const toggleTemperature = document.querySelector(\".temperature-toggle\");\n    const moreInfoCurrent = document.querySelector(\".more-info\");\n\n    submitSearch.addEventListener(\"click\", domController.searchWeather);\n    moreInfoCurrent.addEventListener(\n      \"click\",\n      currentWeatherController.openMoreInfo\n    );\n    toggleTemperature.addEventListener(\n      \"click\",\n      domController.changePreferredTemp\n    );\n\n    this.fillSuggestions(suggestionContainer);\n  },\n  disableSearch: function () {\n    const submitSearchButton = document.querySelector(\"#submit-search\");\n    const searchDisplay = document.querySelector(\"#search-error-display\");\n\n    submitSearchButton.disabled = true;\n    searchDisplay.textContent = \"Searching..\";\n\n    //goes in queue, waits till fetch gets the data - and only then the 3 seconds pass (I think)\n    setTimeout(() => {\n      submitSearchButton.disabled = false;\n      searchDisplay.textContent = \"\";\n    }, 5000);\n  },\n  searchWeather: function (e) {\n    e.preventDefault();\n    const searchInput = document.querySelector(\"#search\");\n    const searchValue = searchInput.value;\n\n    domController.disableSearch();\n\n    if (errorChecker.checkInput(searchInput) === true) {\n      searchInput.setAttribute(\"class\", \"valid-search\");\n      errorChecker.clearErrorDisplay();\n      domController.callTheApi(searchValue);\n    } else {\n      searchInput.setAttribute(\"class\", \"invalid-search\");\n    }\n  },\n  callTheApi: function (searchValue) {\n    requestsController\n      .createRequest(searchValue)\n      .then((replyObj) => {\n        domController.receiveReply(replyObj);\n      })\n      .catch((err) => {\n        console.error(`${err.name} at ${err.stack}. ${err}`);\n      });\n  },\n  receiveReply: function ({ currentPeriod, weatherPeriod, hourPeriod }) {\n    console.log(currentPeriod, weatherPeriod, hourPeriod);\n    savedHourlyData = [];\n    savedCurrentData = [];\n    savedPeriodData = [];\n\n    savedHourlyData = hourPeriod;\n    weatherHourController.processHours(savedHourlyData);\n\n    savedCurrentData = currentPeriod[0];\n    currentWeatherController.processCurrentWeather(currentPeriod[0]);\n\n    savedPeriodData = weatherPeriod;\n    weatherPeriodController.processWeatherPeriod(weatherPeriod);\n  },\n  fillSuggestions: function (suggestionContainer) {\n    Object.values(capitals).forEach((capital) => {\n      let capitalContainer = document.createElement(\"option\");\n      capitalContainer.setAttribute(\"value\", capital);\n\n      suggestionContainer.appendChild(capitalContainer);\n    });\n  },\n  changePreferredTemp: function () {\n    const fUnit = document.querySelector(\"#F\");\n    const cUnit = document.querySelector(\"#C\");\n    //if this isn't done, the milisecond while things are loading allows the users to blow everything up by switching F/C\n    const isAvailable = domController.failSafeTest();\n\n    if (preferredTemparature === \"C\") {\n      preferredTemparature = \"F\";\n      cUnit.removeAttribute(\"class\");\n      fUnit.setAttribute(\"class\", \"selectedTemp\");\n      if (isAvailable === true) {\n        domController.resetTempDisplays();\n      }\n    } else {\n      preferredTemparature = \"C\";\n      fUnit.removeAttribute(\"class\");\n      cUnit.setAttribute(\"class\", \"selectedTemp\");\n      if (isAvailable === true) {\n        domController.resetTempDisplays();\n      }\n    }\n  },\n  failSafeTest: function () {\n    const currentTemp = document.querySelector(\".current-temp\");\n    if (currentTemp.firstChild === null) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n  resetTempDisplays: function () {\n    weatherHourController.processHours(savedHourlyData);\n    currentWeatherController.processCurrentWeather(savedCurrentData);\n    weatherPeriodController.processWeatherPeriod(savedPeriodData);\n  },\n};\n\nconst currentWeatherController = {\n  processCurrentWeather: function (data) {\n    const cityName = document.querySelector(\"#city-name\");\n    const localTime = document.querySelector(\"#local-time\");\n    const currentTemp = document.querySelector(\".current-temp\");\n    const weatherDescription = document.querySelector(\n      \".current-weather-description\"\n    );\n    const currentWeatherIcon = document.querySelector(\".current-weather-icon\");\n    const weatherIcon = iconFinder.processCondition(data.icon);\n\n    currentWeatherIcon.textContent = \"\";\n    localTime.textContent = data.dateTimePeriod;\n    currentTemp.textContent = data.getUserPreferredTemp(\n      \"temp\",\n      preferredTemparature\n    );\n    cityName.textContent = data.address;\n    weatherDescription.textContent = data.description;\n\n    currentWeatherIcon.appendChild(weatherIcon);\n  },\n  openMoreInfo: function () {\n    const isReady = domController.failSafeTest();\n    if (isReady === true) {\n      const modalSpace = document.querySelector(\".modal-space\");\n      const modal = document.createElement(\"dialog\");\n      currentWeatherController.createMoreInfoCard(savedCurrentData, modal);\n\n      modalSpace.textContent = \"\";\n      modalSpace.appendChild(modal);\n\n      modal.showModal();\n    }\n  },\n  closeModal: function () {\n    const modalSpace = document.querySelector(\".modal-space\");\n\n    modalSpace.textContent = \"\";\n  },\n  createMoreInfoCard: function (currentData, modal) {\n    const closeModalButton = document.createElement(\"div\");\n\n    const conditionContainer = document.createElement(\"div\");\n\n    const humidityContainer = document.createElement(\"div\");\n    const humidity = document.createElement(\"div\");\n    const humidityIconContainer = document.createElement(\"div\");\n\n    const tempContainer = document.createElement(\"div\");\n    const currentTempContainer = document.createElement(\"div\");\n    const currentTemp = document.createElement(\"span\");\n    const currentTempText = document.createElement(\"span\");\n    const feelsLikeTempContainer = document.createElement(\"div\");\n    const feelsLike = document.createElement(\"span\");\n    const feelsLikeText = document.createElement(\"span\");\n\n    const sunStatusContainer = document.createElement(\"div\");\n    const sunriseContainer = document.createElement(\"div\");\n    const sunsetContainer = document.createElement(\"div\");\n    const sunriseTime = document.createElement(\"div\");\n    const sunriseIcon = document.createElement(\"div\");\n    const sunsetTime = document.createElement(\"div\");\n    const sunsetIcon = document.createElement(\"div\");\n\n    const pricip = document.createElement(\"div\");\n    const creditsContainer = document.createElement(\"div\");\n\n    closeModalButton.addEventListener(\n      \"click\",\n      currentWeatherController.closeModal\n    );\n\n    closeModalButton.textContent = \"x\";\n    conditionContainer.textContent = currentData.conditions;\n    humidity.textContent = currentData.humidity;\n    pricip.textContent = currentData.pricip;\n    sunriseTime.textContent = currentData.sunrise;\n    sunsetTime.textContent = currentData.sunset;\n    creditsContainer.textContent = credits;\n\n    currentWeatherController.addTemperatureData(\n      feelsLike,\n      feelsLikeText,\n      currentTemp,\n      currentData\n    );\n\n    currentTempText.textContent = \"Current Temperature:\";\n\n    sunStatusContainer.appendChild(sunriseContainer);\n    sunriseContainer.appendChild(sunriseIcon);\n    sunriseContainer.appendChild(sunriseTime);\n    sunriseIcon.appendChild(iconFinder.processCondition(\"sunrise\"));\n\n    sunStatusContainer.appendChild(sunsetContainer);\n    sunsetContainer.appendChild(sunsetIcon);\n    sunsetContainer.appendChild(sunsetTime);\n    sunsetIcon.appendChild(iconFinder.processCondition(\"sunset\"));\n\n    tempContainer.appendChild(currentTempContainer);\n    currentTempContainer.appendChild(currentTempText);\n    currentTempText.appendChild(currentTemp);\n\n    tempContainer.appendChild(feelsLikeTempContainer);\n    feelsLikeTempContainer.appendChild(feelsLikeText);\n    feelsLikeTempContainer.appendChild(feelsLike);\n\n    humidityContainer.appendChild(humidity);\n    humidityContainer.appendChild(humidityIconContainer);\n    //get the icon based on humidity level\n    humidityIconContainer.appendChild(\n      iconFinder.processHumidity(savedCurrentData)\n    );\n\n    modal.classList.add(\"additional-information\");\n    conditionContainer.classList.add(\"current-conditions-container\");\n    humidityContainer.classList.add(\"humidity-container\");\n    humidityIconContainer.classList.add(\"humidity-data-container\");\n    tempContainer.classList.add(\"temp-container\");\n    currentTempContainer.classList.add(\"current-temp-container\");\n    currentTemp.classList.add(\"current-temp\");\n    feelsLikeTempContainer.classList.add(\"feels-like-container\");\n    feelsLike.classList.add(\"feels-like\");\n    sunStatusContainer.classList.add(\"sun-status-container\");\n    sunriseContainer.classList.add(\"sunrise-container\");\n    sunsetContainer.classList.add(\"sunset-container\");\n    pricip.classList.add(\"current-pricip\");\n    creditsContainer.classList.add(\"credits-container\");\n    closeModalButton.classList.add(\"close-modal-button\");\n    sunriseTime.classList.add(\"sunrise-time\");\n    sunsetTime.classList.add(\"sunset-time\");\n    feelsLikeText.classList.add(\"feels-like-text\");\n    currentTempText.classList.add(\"current-temp-text\");\n    humidity.classList.add(\"humidity\");\n\n    modal.appendChild(closeModalButton);\n    modal.appendChild(sunStatusContainer);\n    modal.appendChild(tempContainer);\n    modal.appendChild(humidityContainer);\n    modal.appendChild(conditionContainer);\n    modal.appendChild(pricip);\n    modal.appendChild(creditsContainer);\n  },\n  addTemperatureData: function (\n    feelsLike,\n    feelsLikeText,\n    currentTemp,\n    currentData\n  ) {\n    if (currentData.type === \"General\") {\n      feelsLike.textContent = currentData.getUserPreferredTemp(\n        \"feelsLikeMaxTemp\",\n        preferredTemparature\n      );\n      feelsLikeText.textContent = \"The temperature feels like:\";\n\n      currentTemp.textContent = currentData.getUserPreferredTemp(\n        \"dayTemp\",\n        preferredTemparature\n      );\n    } else {\n      feelsLike.textContent = currentData.getUserPreferredTemp(\n        \"feelsLike\",\n        preferredTemparature\n      );\n      feelsLikeText.textContent = \"The temperature feels like:\";\n\n      currentTemp.textContent = currentData.getUserPreferredTemp(\n        \"temp\",\n        preferredTemparature\n      );\n    }\n\n    console.log(currentData);\n  },\n};\n\nconst weatherPeriodController = {\n  //this will have to process the current weather data's hourly cards - make hourly cards up to down\n  cardIndex: 0,\n  weatherPeriodDoms: [],\n  initiateControls: function (mainContainer) {\n    const goLeftSpan = document.createElement(\"span\");\n    const goRightSpan = document.createElement(\"span\");\n\n    goLeftSpan.textContent = \"<\";\n    goRightSpan.textContent = \">\";\n\n    goLeftSpan.addEventListener(\"click\", this.goLeft);\n    goRightSpan.addEventListener(\"click\", this.goRight);\n\n    mainContainer.appendChild(goLeftSpan);\n    mainContainer.appendChild(goRightSpan);\n\n    goLeftSpan.classList.add(\"go-left\");\n    goRightSpan.classList.add(\"go-right\");\n  },\n  goRight: function () {\n    weatherPeriodController.hideDisplayedCards();\n    weatherPeriodController.increaseIndex();\n    for (\n      let i = weatherPeriodController.currentDisplayedIndex - 3;\n      i < weatherPeriodController.currentDisplayedIndex;\n      i++\n    ) {\n      weatherPeriodController.weatherPeriodDoms[i].classList.remove(\"hidden\");\n    }\n  },\n  goLeft: function () {\n    weatherPeriodController.hideDisplayedCards();\n    weatherPeriodController.decreaseIndex();\n    for (\n      let i = weatherPeriodController.currentDisplayedIndex - 3;\n      i < weatherPeriodController.currentDisplayedIndex;\n      i++\n    ) {\n      console.log(i);\n      weatherPeriodController.weatherPeriodDoms[i].classList.remove(\"hidden\");\n    }\n  },\n  increaseIndex: function () {\n    if (this.currentDisplayedIndex >= 14) {\n      this.currentDisplayedIndex = 3;\n    } else {\n      this.currentDisplayedIndex += 1;\n    }\n  },\n  decreaseIndex: function () {\n    if (this.currentDisplayedIndex <= 3) {\n      this.currentDisplayedIndex = 14;\n    } else {\n      this.currentDisplayedIndex -= 1;\n    }\n  },\n  hideDisplayedCards: function () {\n    for (\n      let i = this.currentDisplayedIndex - 3;\n      i < this.currentDisplayedIndex;\n      i++\n    ) {\n      this.weatherPeriodDoms[i].classList.add(\"hidden\");\n    }\n  },\n  currentDisplayedIndex: 3,\n  checkIndex: function () {\n    if (this.cardIndex < 3) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  processWeatherPeriod: function (weatherPeriodData) {\n    const weatherCardContainer = document.querySelector(\n      \".weather-card-container\"\n    );\n\n    weatherCardContainer.textContent = \"\";\n    this.cardIndex *= 0;\n    this.initiateControls(weatherCardContainer);\n    this.weatherPeriodDoms = [];\n\n    weatherPeriodData.forEach((obj) => {\n      this.createCard(\n        obj,\n        weatherCardContainer,\n        this.cardIndex,\n        this.checkIndex()\n      );\n      this.cardIndex += 1;\n    });\n  },\n\n  createCard: function (data, location, cardIndex, isDisplayed) {\n    const weatherCard = document.createElement(\"div\");\n    const temp = document.createElement(\"div\");\n\n    const cardFooter = document.createElement(\"div\");\n    const conditionContainer = document.createElement(\"div\");\n    const status = document.createElement(\"div\");\n    const date = document.createElement(\"div\");\n    const moreInfo = document.createElement(\"div\");\n\n    weatherCard.style.backgroundImage = `url(${iconFinder.processBackgroundIcon(\n      data.icon\n    )})`;\n\n    temp.textContent = data.getUserPreferredTemp(\n      \"dayTemp\",\n      preferredTemparature\n    );\n    status.textContent = data.conditions;\n    date.textContent = data.dateTime;\n    moreInfo.textContent = \"See more info...\";\n\n    location.appendChild(weatherCard);\n    weatherCard.appendChild(temp);\n    weatherCard.appendChild(cardFooter);\n\n    cardFooter.appendChild(conditionContainer);\n    conditionContainer.appendChild(status);\n    conditionContainer.appendChild(date);\n    cardFooter.appendChild(moreInfo);\n\n    weatherCard.classList.add(\"weather-card\");\n    temp.classList.add(\"temp-on-weather-card\");\n    cardFooter.classList.add(\"card-footer\");\n    conditionContainer.classList.add(\"condition-container\");\n    status.classList.add(\"status-on-weather-card\");\n    date.classList.add(\"date\");\n    moreInfo.classList.add(\"more-info\");\n    moreInfo.setAttribute(\"id\", `card-index:${cardIndex}`);\n\n    moreInfo.addEventListener(\"click\", weatherPeriodController.openMoreInfo);\n\n    this.weatherPeriodDoms.push(weatherCard);\n\n    if (isDisplayed === false) {\n      weatherCard.classList.add(\"hidden\");\n    }\n  },\n  openMoreInfo: function (e) {\n    const modalSpace = document.querySelector(\".modal-space\");\n    const modal = document.createElement(\"dialog\");\n    const cardIndex = weatherPeriodController.getCardIndex(e);\n    const cardData = savedPeriodData[cardIndex];\n\n    //Keeping things DRY\n    currentWeatherController.createMoreInfoCard(cardData, modal);\n\n    modalSpace.textContent = \"\";\n    modalSpace.appendChild(modal);\n\n    modal.showModal();\n  },\n  getCardIndex: function (e) {\n    const idName = e.target.getAttribute(\"id\");\n    const cardIndex = idName.slice(11);\n    return cardIndex;\n  },\n};\n\nconst weatherHourController = {\n  weatherHourContainer: document.querySelector(\".current-hourly-breakdown\"),\n  hourIndex: 0,\n  processHours: function (json) {\n    const firstDozenHours = document.createElement(\"div\");\n    const secondDozenHours = document.createElement(\"div\");\n\n    this.weatherHourContainer.textContent = \"\";\n    this.hourIndex *= 0;\n\n    firstDozenHours.classList.add(\"dozen-hours\");\n    secondDozenHours.classList.add(\"dozen-hours\");\n\n    this.weatherHourContainer.appendChild(firstDozenHours);\n    this.weatherHourContainer.appendChild(secondDozenHours);\n\n    json.forEach((hour) => {\n      if (this.hourIndex < 12) {\n        this.createHourCard(hour, firstDozenHours);\n        this.hourIndex += 1;\n      } else {\n        this.createHourCard(hour, secondDozenHours);\n        this.hourIndex += 1;\n      }\n    });\n  },\n  createHourCard: function (hourObj, weatherHoursContainer) {\n    const hourContainer = document.createElement(\"div\");\n    const iconContainer = document.createElement(\"div\");\n    const temp = document.createElement(\"span\");\n\n    const additionalInfo = document.createElement(\"div\");\n    const hourAndPrecip = document.createElement(\"div\");\n    const hour = document.createElement(\"div\");\n    const precipitation = document.createElement(\"div\");\n\n    const conditionsContainer = document.createElement(\"div\");\n    const conditions = document.createElement(\"div\");\n    const humidity = document.createElement(\"div\");\n\n    temp.textContent = hourObj.getUserPreferredTemp(\n      \"temp\",\n      preferredTemparature\n    );\n\n    hour.textContent = hourObj.exactHour;\n    precipitation.textContent = `Precipitation: ${hourObj.getPrecip(hourObj)}`;\n    conditions.textContent = hourObj.conditions;\n    humidity.textContent = `Humidity: ${hourObj.humidity}%`;\n\n    iconContainer.style.backgroundImage = `url(${iconFinder.processBackgroundIcon(\n      hourObj.icon\n    )})`;\n\n    /*\n    [icon       |                     ]\n    [Temperature|    Hour      Precip ]\n    [icon       | conditions  humidity]\n    */\n\n    weatherHoursContainer.appendChild(hourContainer);\n    hourContainer.appendChild(iconContainer);\n    hourContainer.appendChild(additionalInfo);\n    iconContainer.appendChild(temp);\n\n    additionalInfo.appendChild(hourAndPrecip);\n    additionalInfo.appendChild(conditionsContainer);\n\n    hourAndPrecip.appendChild(hour);\n    hourAndPrecip.appendChild(precipitation);\n\n    conditionsContainer.appendChild(conditions);\n    conditionsContainer.appendChild(humidity);\n\n    weatherHoursContainer.classList.add(\"weather-hours-container\");\n    hourContainer.classList.add(\"hour-container\");\n    iconContainer.classList.add(\"icon-container\");\n    additionalInfo.classList.add(\"additional-info-container\");\n    hourAndPrecip.classList.add(\"hour-and-precip-container\");\n    hour.classList.add(\"hour\");\n    precipitation.classList.add(\"precipitation-on-card\");\n    conditionsContainer.classList.add(\"conditions-container\");\n    conditions.classList.add(\"conditions-on-card\");\n    humidity.classList.add(\"humidity-on-card\");\n  },\n};\n\nconst errorChecker = {\n  searchErrorDisplay: document.querySelector(\"#search-error-display\"),\n  clearErrorDisplay: function () {\n    errorChecker.searchErrorDisplay.textContent = \"\";\n  },\n  checkInput: function (searchInput) {\n    const inputValue = searchInput.value;\n    if (!inputValue) {\n      this.searchErrorDisplay.textContent =\n        \"You cannot leave the search field blank!\";\n    } else if (searchInput.validity.tooShort) {\n      this.searchErrorDisplay.textContent = \"Not enough characters entered\";\n      return false;\n    } else if (searchInput.validity.tooLong) {\n      this.searchErrorDisplay.textContent = \"Too many characters entered\";\n      return false;\n    } else {\n      return true;\n    }\n  },\n};\n\nexport { domController };\n\n/* TODO:\n  * 1 - Make a default load, make it be Dubai - and let dom-manager make the initial request. \n  * 2 - Find a way to save the user's previous interaction via localstorage API and make it the default\n\n\n    this.weatherPeriodDoms.push(weatherCard); <--Lack of garbage collection was causing the infamous bug\n\n*/\n","/* eslint-disable */\nimport { domController } from \"./components/dom-manager\";\nimport { setIconClass } from \"./components/icon-manager\";\nimport \"./styles.css\";\n\ndomController.initiateDom();\nsetIconClass();\ndomController.callTheApi(\"Tashkent\");\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","array","findIndex","object","Object","prototype","hasOwnProperty","call","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","constructFromSymbol","Symbol","for","constructFrom","Date","constructor","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","in","setHours","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","bind","find","map","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","includes","warnOrThrowProtectedError","formatter","matched","dateController","processDate","processHour","hour","getToday","log","split","WeatherDay","json","dayIndex","conditions","datetime","feelsLikeMaxTempF","feelslikemax","feelsLikeMaxTempC","convertFtoC","feelsLikeMinTempF","feelslikemin","feelsLikeMinTempC","humidity","precip","getPrecip","snow","dayTempF","temp","dayTempC","dayTempMaxF","tempmax","dayTempMaxC","dayTempMinF","tempmin","dayTempMinC","sunrise","sunset","weatherHours","icon","type","getHumidityLevel","tempInF","parseFloat","toFixed","getUserPreferredTemp","data","userTemp","CurrentWeather","address","description","dateTimePeriod","feelsLikeF","feelslike","feelsLikeC","pricip","tempF","tempC","capitalizeFirstLetter","processedStr","charAt","HourPeriod","hoursObj","exactHour","requestsController","requestLink","createRequest","async","dataProcessor","resetWeatherData","fetch","status","currentPeriod","processCurrent","weatherPeriod","processDataPeriod","hourPeriod","processHourPeriod","err","error","name","stack","currentConditionsObj","currentConditions","push","days","forEach","dayObj","hourIndex","hourPeriodObj","WeatherIcon","media","getIcon","processedIcon","Image","getIconUrl","weatherIcons","iconFinder","processCondition","iconName","processHumidity","humidityLevel","processBackgroundIcon","preferredTemparature","savedCurrentData","savedPeriodData","savedHourlyData","domController","initiateDom","suggestionContainer","querySelector","submitSearch","toggleTemperature","moreInfoCurrent","addEventListener","searchWeather","currentWeatherController","openMoreInfo","changePreferredTemp","fillSuggestions","disableSearch","submitSearchButton","searchDisplay","disabled","textContent","setTimeout","preventDefault","searchInput","searchValue","errorChecker","checkInput","setAttribute","clearErrorDisplay","callTheApi","then","replyObj","receiveReply","catch","weatherHourController","processHours","processCurrentWeather","weatherPeriodController","processWeatherPeriod","capital","capitalContainer","createElement","appendChild","fUnit","cUnit","isAvailable","failSafeTest","removeAttribute","resetTempDisplays","firstChild","cityName","localTime","currentTemp","weatherDescription","currentWeatherIcon","weatherIcon","modalSpace","modal","createMoreInfoCard","showModal","closeModal","currentData","closeModalButton","conditionContainer","humidityContainer","humidityIconContainer","tempContainer","currentTempContainer","currentTempText","feelsLikeTempContainer","feelsLike","feelsLikeText","sunStatusContainer","sunriseContainer","sunsetContainer","sunriseTime","sunriseIcon","sunsetTime","sunsetIcon","creditsContainer","addTemperatureData","classList","add","cardIndex","weatherPeriodDoms","initiateControls","mainContainer","goLeftSpan","goRightSpan","goLeft","goRight","hideDisplayedCards","increaseIndex","currentDisplayedIndex","remove","decreaseIndex","checkIndex","weatherPeriodData","weatherCardContainer","obj","createCard","isDisplayed","weatherCard","cardFooter","moreInfo","style","backgroundImage","getCardIndex","cardData","target","getAttribute","weatherHourContainer","firstDozenHours","secondDozenHours","createHourCard","hourObj","weatherHoursContainer","hourContainer","iconContainer","additionalInfo","hourAndPrecip","precipitation","conditionsContainer","searchErrorDisplay","validity","tooShort","tooLong","iconMap","rain","fog","wind","cloudy","highHumidity","mediumHumidity","lowHumidity","hazyDay","sleet","blizzard","hail","dustStormDay","tornadoAlert","earthquakeAlert","entries","setIconClass"],"sourceRoot":""}